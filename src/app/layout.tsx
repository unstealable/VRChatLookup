import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { LanguageProvider } from "@/contexts/LanguageContext";
import { ThemeProvider } from "@/contexts/ThemeContext";
import { getBaseMetadata, detectServerLanguage } from "@/lib/metadata";
import { cookies, headers } from "next/headers";
import ClientWrapper from "@/components/ClientWrapper";

// Dynamic metadata generation based on language
export async function generateMetadata(): Promise<Metadata> {
  const cookieStore = await cookies();
  const headersList = await headers();
  
  const acceptLanguage = headersList.get("accept-language");
  const cookieLang = cookieStore.get("vrchatlookup-language")?.value;
  const lang = detectServerLanguage(acceptLanguage, cookieLang);
  
  return getBaseMetadata(lang);
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Dynamic metadata is generated by generateMetadata function above

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html suppressHydrationWarning>
      <head>
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicon/desktop/favicon.svg" type="image/svg+xml" />
        <link rel="apple-touch-icon" href="/favicon/mobile/apple-touch-icon.png" />
        <link rel="manifest" href="/site.webmanifest" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider>
          <LanguageProvider>
            <ClientWrapper>{children}</ClientWrapper>
          </LanguageProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
